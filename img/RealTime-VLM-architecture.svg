<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="1400" height="860" viewBox="0 0 1400 860" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="bggrad" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stop-color="#0b1020"/>
      <stop offset="100%" stop-color="#0e1530"/>
    </linearGradient>
    <linearGradient id="brand" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stop-color="#7c5cff"/>
      <stop offset="100%" stop-color="#00D4FF"/>
    </linearGradient>
    <filter id="softShadow" x="-50%" y="-50%" width="200%" height="200%">
      <feDropShadow dx="0" dy="6" stdDeviation="12" flood-color="#000000" flood-opacity="0.45"/>
    </filter>
    <filter id="innerGlow" x="-50%" y="-50%" width="200%" height="200%">
      <feGaussianBlur in="SourceGraphic" stdDeviation="4" result="blur"/>
      <feBlend in="SourceGraphic" in2="blur" mode="screen"/>
    </filter>
    <marker id="arrow" viewBox="0 0 10 10" refX="8" refY="5" markerWidth="10" markerHeight="10" orient="auto-start-reverse">
      <path d="M 0 0 L 10 5 L 0 10 z" fill="#d6e2ff"/>
    </marker>
    <marker id="darrow" viewBox="0 0 10 10" refX="8" refY="5" markerWidth="10" markerHeight="10" orient="auto-start-reverse">
      <path d="M 0 0 L 10 5 L 0 10 z" fill="#9bdcff"/>
    </marker>
    <style>
      .title { font: 700 28px 'Inter', system-ui, -apple-system, Segoe UI, Roboto, sans-serif; fill: #e8ecff; letter-spacing:-0.3px; }
      .subtitle { font: 500 14px 'Inter', system-ui; fill: #A2A8C4; }
      .label { font: 600 15px 'Inter', system-ui; fill: #dbe4ff; }
      .mono { font: 500 13px ui-monospace, SFMono-Regular, Menlo, Consolas, monospace; fill: #c7d2ff; }
      .pill { font: 600 12px 'Inter', system-ui; fill:#dbe4ff; }
      .small { font: 600 12px 'Inter', system-ui; fill:#aeb8e6; }
    </style>
  </defs>

  <rect x="0" y="0" width="1400" height="860" fill="url(#bggrad)"/>

  <!-- Header -->
  <g transform="translate(48,38)">
    <text class="title">RealTime‑VLM — Architecture</text>
    <text class="subtitle" y="28">Live webcam ➜ JPEG frame ➜ OpenAI‑compatible API ➜ Text response</text>
  </g>

  <!-- Two columns separators -->
  <g opacity="0.18">
    <rect x="40" y="88" width="640" height="712" rx="18" fill="#121832" stroke="url(#brand)" stroke-opacity="0.35"/>
    <rect x="720" y="88" width="640" height="712" rx="18" fill="#141a36" stroke="url(#brand)" stroke-opacity="0.35"/>
  </g>

  <text x="60" y="120" class="label">Client (Browser)</text>
  <text x="740" y="120" class="label">Inference Server (OpenAI‑compatible)</text>

  <!-- Client nodes -->
  <!-- Webcam -->
  <g transform="translate(90,150)" filter="url(#softShadow)">
    <rect width="260" height="84" rx="16" fill="#161e3e" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="28" class="label">Webcam &lt;video&gt;</text>
    <text x="16" y="52" class="mono">getUserMedia()</text>
  </g>

  <!-- Canvas -->
  <g transform="translate(90,270)" filter="url(#softShadow)">
    <rect width="260" height="84" rx="16" fill="#161e3e" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="28" class="label">Canvas encoder</text>
    <text x="16" y="52" class="mono">toDataURL('image/jpeg', q)</text>
  </g>

  <!-- Payload -->
  <g transform="translate(90,390)" filter="url(#softShadow)">
    <rect width="520" height="124" rx="18" fill="#161e3e" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="30" class="label">Payload builder</text>
    <text x="16" y="55" class="mono">messages: [ {type:'text', text}, {type:'image_url', image_url} ]</text>
    <text x="16" y="78" class="mono">model, max_tokens, temperature</text>
    <g transform="translate(390,16)">
      <rect width="108" height="28" rx="14" fill="#232b54" stroke="url(#brand)"/>
      <text x="14" y="19" class="pill">Interval</text>
    </g>
    <g transform="translate(390,52)">
      <rect width="108" height="28" rx="14" fill="#232b54" stroke="url(#brand)"/>
      <text x="14" y="19" class="pill">Quality</text>
    </g>
    <g transform="translate(390,88)">
      <rect width="108" height="28" rx="14" fill="#232b54" stroke="url(#brand)"/>
      <text x="14" y="19" class="pill">Resolution</text>
    </g>
  </g>

  <!-- Model Picker -->
  <g transform="translate(350,150)" filter="url(#softShadow)">
    <rect width="260" height="84" rx="16" fill="#161e3e" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="28" class="label">Model picker</text>
    <text x="16" y="52" class="mono">GET /v1/models</text>
  </g>

  <!-- Response UI -->
  <g transform="translate(90,560)" filter="url(#softShadow)">
    <rect width="520" height="180" rx="18" fill="#161e3e" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="30" class="label">Response &amp; Log</text>
    <text x="16" y="55" class="mono">choices[0].message.content</text>
    <g transform="translate(16,78)">
      <rect width="200" height="30" rx="8" fill="#232b54" stroke="#2b356c" />
      <text x="12" y="20" class="small">Badges • Copy • Clear • FPS</text>
    </g>
  </g>

  <!-- Server nodes -->
  <g transform="translate(770,160)" filter="url(#softShadow)">
    <rect width="260" height="84" rx="16" fill="#0f1631" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="28" class="label">/v1/models</text>
    <text x="16" y="52" class="mono">List vision models</text>
  </g>

  <g transform="translate(770,270)" filter="url(#softShadow)">
    <rect width="260" height="84" rx="16" fill="#0f1631" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="28" class="label">/v1/chat/completions</text>
    <text x="16" y="52" class="mono">Image + text input</text>
  </g>

  <g transform="translate(1060,240)" filter="url(#softShadow)">
    <rect width="260" height="180" rx="18" fill="#0f1631" stroke="url(#brand)" stroke-opacity="0.7"/>
    <text x="16" y="30" class="label">Vision‑Language Model</text>
    <text x="16" y="56" class="mono">e.g., LLaVA / Llama‑3.2‑Vision</text>
    <text x="16" y="78" class="mono">Pixtral‑12B / Qwen2‑VL</text>
    <text x="16" y="100" class="mono">Phi‑3.5‑Vision / Molmo</text>
  </g>

  <!-- Arrows + steps -->
  <!-- Webcam -> Canvas -->
  <path d="M 350 192 L 350 192 L 350 192" stroke="transparent"/>
  <path d="M 220 234 L 220 270" stroke="#d6e2ff" stroke-width="2.2" marker-end="url(#arrow)"/>
  <circle cx="220" cy="252" r="12" fill="#232b54" stroke="url(#brand)" />
  <text x="216" y="256" class="small" fill="#dbe4ff">1</text>

  <!-- Canvas -> Payload -->
  <path d="M 220 354 L 220 390" stroke="#d6e2ff" stroke-width="2.2" marker-end="url(#arrow)"/>
  <circle cx="220" cy="372" r="12" fill="#232b54" stroke="url(#brand)" />
  <text x="216" y="376" class="small" fill="#dbe4ff">2</text>

  <!-- Payload -> /v1/chat/completions -->
  <path d="M 610 452 C 690 452, 720 312, 770 312" stroke="#d6e2ff" stroke-width="2.2" fill="none" marker-end="url(#arrow)"/>
  <circle cx="690" cy="412" r="12" fill="#232b54" stroke="url(#brand)" />
  <text x="686" y="416" class="small" fill="#dbe4ff">3</text>

  <!-- /v1/chat/completions -> VLM -->
  <path d="M 1030 312 L 1060 312" stroke="#9bdcff" stroke-width="2.2" marker-end="url(#darrow)"/>

  <!-- VLM -> Response UI -->
  <path d="M 1190 420 C 1050 620, 760 640, 610 650" stroke="#9bdcff" stroke-width="2.2" fill="none" marker-end="url(#darrow)"/>
  <circle cx="940" cy="560" r="12" fill="#232b54" stroke="url(#brand)" />
  <text x="936" y="564" class="small" fill="#dbe4ff">4</text>

  <!-- Model picker -> /v1/models (dashed) -->
  <path d="M 610 192 C 680 192, 720 202, 770 202" stroke="#7fcaff" stroke-width="2" stroke-dasharray="6 6" fill="none" marker-end="url(#arrow)"/>
  <circle cx="690" cy="192" r="12" fill="#232b54" stroke="url(#brand)" />
  <text x="686" y="196" class="small" fill="#dbe4ff">A</text>

  <!-- Legend -->
  <g transform="translate(1020,680)">
    <rect width="320" height="126" rx="14" fill="#101737" stroke="url(#brand)" filter="url(#softShadow)"/>
    <text x="14" y="28" class="label">Legend</text>
    <g transform="translate(14,40)">
      <rect width="16" height="16" rx="3" fill="#161e3e" stroke="url(#brand)"/><text x="28" y="13" class="small">Client node</text>
    </g>
    <g transform="translate(14,64)">
      <rect width="16" height="16" rx="3" fill="#0f1631" stroke="url(#brand)"/><text x="28" y="13" class="small">Server node</text>
    </g>
    <g transform="translate(170,40)">
      <line x1="0" y1="8" x2="34" y2="8" stroke="#d6e2ff" stroke-width="2.2" marker-end="url(#arrow)"/><text x="42" y="12" class="small">Data</text>
    </g>
    <g transform="translate(170,64)">
      <line x1="0" y1="8" x2="34" y2="8" stroke="#7fcaff" stroke-width="2" stroke-dasharray="6 6" marker-end="url(#arrow)"/><text x="42" y="12" class="small">Control</text>
    </g>
  </g>
</svg>
